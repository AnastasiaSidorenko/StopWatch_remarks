{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\src\\\\Components\\\\Timer.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { format, getMilliseconds, getMinutes, getSeconds, getTime } from 'date-fns';\nexport default function Timer({\n  interval\n}) {\n  const duration = getTime(interval); // const [duration, setDuration] = useState(format(interval,'mm:ss.SS'));\n  // useEffect(() => setDuration(format(interval,'mm:ss.SS')), [interval]);\n  // const [duration, setDuration] = useState(moment.duration(interval));\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\n  //Latest stupid attempt\n  // const minutes = duration > 60000 ?  duration / 60000 : 0;\n  // const seconds = duration > 1000 ? duration / 1000 : 0;\n  // const milliseconds = Math.floor((duration - minutes*60000 - seconds*1000) / 1000);\n\n  const seconds = getSeconds(duration);\n  const minutes = getMinutes(duration); // let seconds = duration.seconds();\n  // let minutes = duration.minutes();\n\n  const milliseconds = getMilliseconds(duration) / 10;\n\n  const pad = n => n < 10 ? \"0\" + n : n; // //const milliseconds = pad()\n  //const milliseconds = Math.round(duration.milliseconds() / 10);\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, pad(minutes), \":\", pad(seconds), \".\", pad(milliseconds));\n  /*{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}*/\n  //was in return\n}","map":{"version":3,"sources":["C:\\Элия\\React\\stopwatch\\src\\Components\\Timer.js"],"names":["React","useState","useEffect","format","getMilliseconds","getMinutes","getSeconds","getTime","Timer","interval","duration","seconds","minutes","milliseconds","pad","n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,MAAR,EAAgBC,eAAhB,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyDC,OAAzD,QAAuE,UAAvE;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAE1C,QAAMC,QAAQ,GAAGH,OAAO,CAACE,QAAD,CAAxB,CAF0C,CAI1C;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;;AAEA,QAAME,OAAO,GAAGL,UAAU,CAACI,QAAD,CAA1B;AACA,QAAME,OAAO,GAAGP,UAAU,CAACK,QAAD,CAA1B,CAjB0C,CAkB1C;AACA;;AACA,QAAMG,YAAY,GAAGT,eAAe,CAACM,QAAD,CAAf,GAA4B,EAAjD;;AAEC,QAAMI,GAAG,GAAGC,CAAC,IAAKA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAArC,CAtByC,CAuB1C;AACC;;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,CAACF,OAAD,CADN,OACkBE,GAAG,CAACH,OAAD,CADrB,OACiCG,GAAG,CAACD,YAAD,CADpC,CADF;AAKA;AAA4E;AAC7E","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {format, getMilliseconds, getMinutes, getSeconds, getTime} from 'date-fns';\r\n\r\nexport default function Timer({ interval }) {\r\n\r\n  const duration = getTime(interval);\r\n\r\n  // const [duration, setDuration] = useState(format(interval,'mm:ss.SS'));\r\n  // useEffect(() => setDuration(format(interval,'mm:ss.SS')), [interval]);\r\n\r\n  // const [duration, setDuration] = useState(moment.duration(interval));\r\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\r\n\r\n\r\n  //Latest stupid attempt\r\n  // const minutes = duration > 60000 ?  duration / 60000 : 0;\r\n  // const seconds = duration > 1000 ? duration / 1000 : 0;\r\n  // const milliseconds = Math.floor((duration - minutes*60000 - seconds*1000) / 1000);\r\n\r\n  const seconds = getSeconds(duration);\r\n  const minutes = getMinutes(duration);\r\n  // let seconds = duration.seconds();\r\n  // let minutes = duration.minutes();\r\n  const milliseconds = getMilliseconds(duration) / 10 ;\r\n\r\n   const pad = n => (n < 10 ? \"0\" + n : n);\r\n  // //const milliseconds = pad()\r\n   //const milliseconds = Math.round(duration.milliseconds() / 10);\r\n  return (\r\n    <div>\r\n      {pad(minutes)}:{pad(seconds)}.{pad(milliseconds)}\r\n    </div>\r\n  );\r\n  /*{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}*/ //was in return\r\n}"]},"metadata":{},"sourceType":"module"}