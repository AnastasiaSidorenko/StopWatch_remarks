{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\src\\\\Components\\\\Timer.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { format } from 'date-fns';\nexport default function Timer({\n  interval\n}) {\n  const _useState = useState(format(interval, 'mm:ss.SS')),\n        _useState2 = _slicedToArray(_useState, 2),\n        duration = _useState2[0],\n        setDuration = _useState2[1];\n\n  useEffect(() => setDuration(format(interval, 'mm:ss.SS')), [interval]); // const [duration, setDuration] = useState(moment.duration(interval));\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\n  //const milliseconds = Math.floor(duration.milliseconds() /10);\n\n  const pad = n => n < 10 ? \"0\" + n : n; //const milliseconds = pad()\n\n\n  const milliseconds = Math.round(duration.milliseconds() / 10);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, pad(duration.minutes()), \":\", pad(duration.seconds()), \".\", pad(milliseconds));\n}","map":{"version":3,"sources":["C:\\Элия\\React\\stopwatch\\src\\Components\\Timer.js"],"names":["React","useState","useEffect","format","Timer","interval","duration","setDuration","pad","n","milliseconds","Math","round","minutes","seconds"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA,oBACVJ,QAAQ,CAACE,MAAM,CAACE,QAAD,EAAU,UAAV,CAAP,CADE;AAAA;AAAA,QACnCC,QADmC;AAAA,QACzBC,WADyB;;AAE1CL,EAAAA,SAAS,CAAC,MAAMK,WAAW,CAACJ,MAAM,CAACE,QAAD,EAAU,UAAV,CAAP,CAAlB,EAAiD,CAACA,QAAD,CAAjD,CAAT,CAF0C,CAI1C;AACA;AAEA;;AACA,QAAMG,GAAG,GAAGC,CAAC,IAAKA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAArC,CAR0C,CAS1C;;;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACI,YAAT,KAA0B,EAArC,CAArB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,GAAG,CAACF,QAAQ,CAACO,OAAT,EAAD,CADN,OAC6BL,GAAG,CAACF,QAAQ,CAACQ,OAAT,EAAD,CADhC,OACuDN,GAAG,CAACE,YAAD,CAD1D,CADF;AAKD","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from 'date-fns';\r\n\r\nexport default function Timer({ interval }) {\r\n  const [duration, setDuration] = useState(format(interval,'mm:ss.SS'));\r\n  useEffect(() => setDuration(format(interval,'mm:ss.SS')), [interval]);\r\n\r\n  // const [duration, setDuration] = useState(moment.duration(interval));\r\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\r\n\r\n  //const milliseconds = Math.floor(duration.milliseconds() /10);\r\n  const pad = n => (n < 10 ? \"0\" + n : n);\r\n  //const milliseconds = pad()\r\n  const milliseconds = Math.round(duration.milliseconds() / 10);\r\n  return (\r\n    <div>\r\n      {pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}