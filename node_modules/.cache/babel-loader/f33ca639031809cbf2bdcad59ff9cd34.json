{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\src\\\\Components\\\\Timer.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { format } from 'date-fns';\nexport default function Timer({\n  interval\n}) {\n  const _useState = useState(interval),\n        _useState2 = _slicedToArray(_useState, 2),\n        duration = _useState2[0],\n        setDuration = _useState2[1]; // const [duration, setDuration] = useState(format(interval,'mm:ss.SS'));\n  // useEffect(() => setDuration(format(interval,'mm:ss.SS')), [interval]);\n  // const [duration, setDuration] = useState(moment.duration(interval));\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\n\n\n  const minutes = duration > 60000 ? duration / 60000 : 0;\n  const seconds = duration > 1000 ? duration / 1000 : 0;\n  const milliseconds = Math.floor((duration - minutes * 60000 - seconds * 1000) / 10);\n\n  const pad = n => n < 10 ? \"0\" + n : n; // //const milliseconds = pad()\n  //const milliseconds = Math.round(duration.milliseconds() / 10);\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, pad(minutes), \":\", pad(seconds), \".\", pad(milliseconds));\n  /*{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}*/\n  //was in return\n}","map":{"version":3,"sources":["C:\\Элия\\React\\stopwatch\\src\\Components\\Timer.js"],"names":["React","useState","useEffect","format","Timer","interval","duration","setDuration","minutes","seconds","milliseconds","Math","floor","pad","n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA,oBAEVJ,QAAQ,CAACI,QAAD,CAFE;AAAA;AAAA,QAEnCC,QAFmC;AAAA,QAEzBC,WAFyB,kBAI1C;AACA;AAEA;AACA;;;AACA,QAAMC,OAAO,GAAGF,QAAQ,GAAG,KAAX,GAAoBA,QAAQ,GAAG,KAA/B,GAAuC,CAAvD;AACA,QAAMG,OAAO,GAAGH,QAAQ,GAAG,IAAX,GAAkBA,QAAQ,GAAG,IAA7B,GAAoC,CAApD;AACA,QAAMI,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,QAAQ,GAAGE,OAAO,GAAC,KAAnB,GAA2BC,OAAO,GAAC,IAApC,IAA4C,EAAvD,CAArB;;AACC,QAAMI,GAAG,GAAGC,CAAC,IAAKA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAArC,CAZyC,CAa1C;AACC;;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,CAACL,OAAD,CADN,OACkBK,GAAG,CAACJ,OAAD,CADrB,OACiCI,GAAG,CAACH,YAAD,CADpC,CADF;AAKA;AAA4E;AAC7E","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from 'date-fns';\r\n\r\nexport default function Timer({ interval }) {\r\n\r\n  const [duration, setDuration] = useState(interval);\r\n\r\n  // const [duration, setDuration] = useState(format(interval,'mm:ss.SS'));\r\n  // useEffect(() => setDuration(format(interval,'mm:ss.SS')), [interval]);\r\n\r\n  // const [duration, setDuration] = useState(moment.duration(interval));\r\n  // useEffect(() => setDuration(moment.duration(interval)), [interval]);\r\n  const minutes = duration > 60000 ?  duration / 60000 : 0;\r\n  const seconds = duration > 1000 ? duration / 1000 : 0;\r\n  const milliseconds = Math.floor((duration - minutes*60000 - seconds*1000) / 10);\r\n   const pad = n => (n < 10 ? \"0\" + n : n);\r\n  // //const milliseconds = pad()\r\n   //const milliseconds = Math.round(duration.milliseconds() / 10);\r\n  return (\r\n    <div>\r\n      {pad(minutes)}:{pad(seconds)}.{pad(milliseconds)}\r\n    </div>\r\n  );\r\n  /*{pad(duration.minutes())}:{pad(duration.seconds())}.{pad(milliseconds)}*/ //was in return\r\n}"]},"metadata":{},"sourceType":"module"}