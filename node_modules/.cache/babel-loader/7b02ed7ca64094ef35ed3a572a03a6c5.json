{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\src\\\\Components\\\\App.js\";\nimport React from \"react\";\nimport LapsesList from \"./LapsesList.js\";\nimport StopWatch from \"./StopWatch.js\";\nimport Timer from \"./Timer.js\";\nimport CurrentTime from \"./CurrentTime\";\nimport { useState, useEffect } from \"react\";\nimport { getTime } from \"date-fns\";\nexport default function App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lapses = _useState2[0],\n        setLapses = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        now = _useState4[0],\n        setNow = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        start = _useState6[0],\n        setStart = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        showClock = _useState8[0],\n        setShowClock = _useState8[1]; // const[interval,setInterval] = useState(differenceInMilliseconds(now,start));\n\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        myInterval = _useState10[0],\n        setMyInterval = _useState10[1]; //const [duration, setDuration] = useState(0);\n  //UPDATED PART\n  // const [intervalMilliseconds, setintervalMilliseconds] = useState(0);\n  // const [intervalSeconds, setintervalSeconds] = useState(0);\n  // const [intervalMinutes, setintervalMinutes] = useState(0);\n  //\n\n\n  const _useState11 = useState(\"START\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        StartB = _useState12[0],\n        setStartB = _useState12[1];\n\n  const _useState13 = useState(\"LAP\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        LapB = _useState14[0],\n        setLapB = _useState14[1];\n\n  const _useState15 = useState(\"RESET\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ResetB = _useState16[0],\n        setResetB = _useState16[1];\n\n  const _useState17 = useState(\"STOP\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        StopB = _useState18[0],\n        setStopB = _useState18[1];\n\n  const _useState19 = useState(\"RESUME\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        ResumeB = _useState20[0],\n        setResumeB = _useState20[1];\n\n  const _useState21 = useState(\"Show / Hide current time\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        showClockB = _useState22[0],\n        setShowClockB = _useState22[1];\n\n  const _useState23 = useState(\"eng\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        LANG = _useState24[0],\n        setLANG = _useState24[1];\n\n  const _useState25 = useState(\"Duration\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        TableDurationHeader = _useState26[0],\n        setDurationHeader = _useState26[1];\n\n  const _useState27 = useState(\"Number\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        TableNumberHeader = _useState28[0],\n        setNumberHeader = _useState28[1];\n\n  const _useState29 = useState(\"Time\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        TableTimeHeader = _useState30[0],\n        setTimeHeader = _useState30[1];\n\n  const _useState31 = useState(0),\n        _useState32 = _slicedToArray(_useState31, 2),\n        isStopped = _useState32[0],\n        setStop = _useState32[1];\n\n  useEffect(() => {\n    if (isStopped) {\n      clearInterval(myInterval);\n    } else if (start > 0) {\n      const id = setInterval(() => {\n        //   setNow(new Date().getTime());\n        //       // }, 73);\n        setNow(getTime(new Date())); // setInterval(differenceInMilliseconds(now,start));\n      }, 73);\n      setMyInterval(id);\n    } else {\n      clearInterval(myInterval);\n    }\n\n    return () => clearInterval(myInterval);\n  }, [isStopped]);\n\n  const addLapse = () => {\n    const timestamp = getTime(new Date());\n    lapses.length > 0 ? setLapses([{\n      end_time: timestamp - start,\n      duration: timestamp - (lapses[0][\"end_time\"] + start)\n    }, ...lapses]) : setLapses([{\n      end_time: timestamp - start,\n      duration: timestamp - start\n    }, ...lapses]);\n    console.log(lapses);\n    setStop(false);\n  };\n\n  const handleStart = () => {\n    setStart(getTime(new Date()));\n    setNow(getTime(new Date()));\n    setStop(false);\n  };\n\n  const handleResume = () => {\n    setStart(getTime(new Date()) - (now - start));\n    setNow(getTime(new Date()));\n    console.log(\"now\");\n    console.log(now);\n    setStop(false);\n  };\n\n  const handleReset = () => {\n    setNow(0);\n    setStart(0);\n    setStop(0);\n    setLapses([]);\n  };\n\n  const handleStop = () => {\n    setStop(true);\n  };\n\n  const ENG = () => {\n    if (LANG !== \"eng\") {\n      setStartB(\"START\");\n      setLapB(\"LAP\");\n      setResetB(\"RESET\");\n      setStopB(\"STOP\");\n      setResumeB(\"RESUME\");\n      setDurationHeader(\"Duration\");\n      setNumberHeader(\"Number\");\n      setTimeHeader(\"Time\");\n      setShowClockB(\"Show / Hide current time\");\n      setLANG(\"eng\");\n    }\n  };\n\n  const RU = () => {\n    if (LANG !== \"ru\") {\n      setStartB(\"СТАРТ\");\n      setLapB(\"КРУГ\");\n      setResetB(\"СБРОС\");\n      setStopB(\"СТОП\");\n      setResumeB(\"ПРОДОЛЖИТЬ\");\n      setDurationHeader(\"Длительность\");\n      setNumberHeader(\"Номер\");\n      setTimeHeader(\"Общее время\");\n      setShowClockB(\"Показать / Скрыть текущее время\");\n      setLANG(\"ru\");\n    }\n  };\n\n  const ToggleCurrentTime = () => {\n    setShowClock(!showClock);\n\n    if (LANG === \"ru\") {\n      setShowClockB(\"Показать / скрыть текущее время\");\n    } else {\n      setShowClockB(\"Show / Hide current time\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"switchers_current_time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lang_switcher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => RU(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"\\u0420\\u0423\\u0421\"), React.createElement(\"button\", {\n    onClick: () => ENG(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"ENG\")), React.createElement(\"div\", {\n    className: \"current_time_block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"showTimeButton\",\n    onClick: () => {\n      ToggleCurrentTime();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, showClockB), showClock ? React.createElement(CurrentTime, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }) : null)), React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    interval: now - start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"lapseTimer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, lapses.length > 0 ? React.createElement(Timer, {\n    interval: now - start - lapses[0][\"end_time\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }) : React.createElement(Timer, {\n    interval: now - start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ClockContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(StopWatch, {\n    isStopped: isStopped,\n    interval: now - start,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), start > 0 && !isStopped ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => addLapse(),\n    className: \"lapButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, LapB), React.createElement(\"button\", {\n    onClick: () => handleStop(),\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, StopB)) : isStopped ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleResume(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, ResumeB), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, ResetB)) : React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleStart(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, StartB), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, ResetB)), React.createElement(LapsesList, {\n    lapses: lapses,\n    numberHeader: TableNumberHeader,\n    timeHeader: TableTimeHeader,\n    durationHeader: TableDurationHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Элия\\React\\stopwatch\\src\\Components\\App.js"],"names":["React","LapsesList","StopWatch","Timer","CurrentTime","useState","useEffect","getTime","App","lapses","setLapses","now","setNow","start","setStart","showClock","setShowClock","myInterval","setMyInterval","StartB","setStartB","LapB","setLapB","ResetB","setResetB","StopB","setStopB","ResumeB","setResumeB","showClockB","setShowClockB","LANG","setLANG","TableDurationHeader","setDurationHeader","TableNumberHeader","setNumberHeader","TableTimeHeader","setTimeHeader","isStopped","setStop","clearInterval","id","setInterval","Date","addLapse","timestamp","length","end_time","duration","console","log","handleStart","handleResume","handleReset","handleStop","ENG","RU","ToggleCurrentTime"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport LapsesList from \"./LapsesList.js\";\r\nimport StopWatch from \"./StopWatch.js\";\r\nimport Timer from \"./Timer.js\";\r\nimport CurrentTime from \"./CurrentTime\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { getTime } from \"date-fns\";\r\n\r\nexport default function App() {\r\n   const [lapses, setLapses] = useState([]);\r\n   const [now, setNow] = useState(0);\r\n   const [start, setStart] = useState(0);\r\n   const [showClock, setShowClock] = useState(false);\r\n   // const[interval,setInterval] = useState(differenceInMilliseconds(now,start));\r\n   const [myInterval, setMyInterval] = useState(null);\r\n   //const [duration, setDuration] = useState(0);\r\n   //UPDATED PART\r\n   // const [intervalMilliseconds, setintervalMilliseconds] = useState(0);\r\n   // const [intervalSeconds, setintervalSeconds] = useState(0);\r\n   // const [intervalMinutes, setintervalMinutes] = useState(0);\r\n   //\r\n   const [StartB, setStartB] = useState(\"START\");\r\n   const [LapB, setLapB] = useState(\"LAP\");\r\n   const [ResetB, setResetB] = useState(\"RESET\");\r\n   const [StopB, setStopB] = useState(\"STOP\");\r\n   const [ResumeB, setResumeB] = useState(\"RESUME\");\r\n   const [showClockB, setShowClockB] = useState(\"Show / Hide current time\");\r\n   const [LANG, setLANG] = useState(\"eng\");\r\n\r\n   const [TableDurationHeader, setDurationHeader] = useState(\"Duration\");\r\n   const [TableNumberHeader, setNumberHeader] = useState(\"Number\");\r\n   const [TableTimeHeader, setTimeHeader] = useState(\"Time\");\r\n\r\n   const [isStopped, setStop] = useState(0);\r\n   useEffect(() => {\r\n      if (isStopped) {\r\n         clearInterval(myInterval);\r\n      } else if (start > 0) {\r\n         const id = setInterval(() => {\r\n            //   setNow(new Date().getTime());\r\n            //       // }, 73);\r\n            setNow(getTime(new Date()));\r\n            // setInterval(differenceInMilliseconds(now,start));\r\n         }, 73);\r\n         setMyInterval(id);\r\n      } else {\r\n         clearInterval(myInterval);\r\n      }\r\n      return () => clearInterval(myInterval);\r\n   }, [isStopped]);\r\n\r\n   const addLapse = () => {\r\n      const timestamp = getTime(new Date());\r\n      lapses.length > 0\r\n         ? setLapses([\r\n              {\r\n                 end_time: timestamp - start,\r\n                 duration: timestamp - (lapses[0][\"end_time\"] + start)\r\n              },\r\n              ...lapses\r\n           ])\r\n         : setLapses([\r\n              { end_time: timestamp - start,\r\n                 duration: timestamp - start },\r\n              ...lapses\r\n           ]);\r\n      console.log(lapses);\r\n      setStop(false);\r\n   };\r\n\r\n   const handleStart = () => {\r\n      setStart(getTime(new Date()));\r\n      setNow(getTime(new Date()));\r\n      setStop(false);\r\n   };\r\n\r\n   const handleResume = () => {\r\n      setStart(getTime(new Date()) - (now - start));\r\n      setNow(getTime(new Date()));\r\n      console.log(\"now\");\r\n      console.log(now);\r\n      setStop(false);\r\n   };\r\n\r\n   const handleReset = () => {\r\n      setNow(0);\r\n      setStart(0);\r\n      setStop(0);\r\n      setLapses([]);\r\n   };\r\n\r\n   const handleStop = () => {\r\n      setStop(true);\r\n   };\r\n\r\n   const ENG = () => {\r\n      if (LANG !== \"eng\") {\r\n         setStartB(\"START\");\r\n         setLapB(\"LAP\");\r\n         setResetB(\"RESET\");\r\n         setStopB(\"STOP\");\r\n         setResumeB(\"RESUME\");\r\n         setDurationHeader(\"Duration\");\r\n         setNumberHeader(\"Number\");\r\n         setTimeHeader(\"Time\");\r\n         setShowClockB(\"Show / Hide current time\");\r\n         setLANG(\"eng\");\r\n      }\r\n   };\r\n   const RU = () => {\r\n      if (LANG !== \"ru\") {\r\n         setStartB(\"СТАРТ\");\r\n         setLapB(\"КРУГ\");\r\n         setResetB(\"СБРОС\");\r\n         setStopB(\"СТОП\");\r\n         setResumeB(\"ПРОДОЛЖИТЬ\");\r\n         setDurationHeader(\"Длительность\");\r\n         setNumberHeader(\"Номер\");\r\n         setTimeHeader(\"Общее время\");\r\n         setShowClockB(\"Показать / Скрыть текущее время\");\r\n         setLANG(\"ru\");\r\n      }\r\n   };\r\n\r\n   const ToggleCurrentTime = () => {\r\n      setShowClock(!showClock);\r\n      if (LANG === \"ru\") {\r\n         setShowClockB(\"Показать / скрыть текущее время\");\r\n      } else {\r\n         setShowClockB(\"Show / Hide current time\");\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"App\">\r\n         <div className=\"switchers_current_time\">\r\n            <div className=\"lang_switcher\">\r\n               <button onClick={() => RU()}>РУС</button>\r\n               <button onClick={() => ENG()}>ENG</button>\r\n            </div>\r\n            <div className=\"current_time_block\">\r\n               <button\r\n                  className=\"showTimeButton\"\r\n                  onClick={() => {\r\n                     ToggleCurrentTime();\r\n                  }}\r\n               >\r\n                  {showClockB}\r\n               </button>\r\n               {showClock ? <CurrentTime /> : null}\r\n            </div>\r\n         </div>\r\n         <div className=\"Timer\">\r\n            <Timer interval={now - start} />\r\n         </div>\r\n         <div className=\"lapseTimer\">\r\n            {lapses.length > 0 ? (\r\n               <Timer interval={now - start - lapses[0][\"end_time\"]} />\r\n            ) : (\r\n               <Timer interval={now - start} />\r\n            )}\r\n         </div>\r\n         <div className=\"ClockContainer\">\r\n            <StopWatch isStopped={isStopped} interval={now - start} />\r\n         </div>\r\n         {start > 0 && !isStopped ? (\r\n            <div className=\"Buttons twoButtons\">\r\n               <button onClick={() => addLapse()} className=\"lapButton\">\r\n                  {LapB}\r\n               </button>\r\n               <button onClick={() => handleStop()} className=\"stopButton\">\r\n                  {StopB}\r\n               </button>\r\n            </div>\r\n         ) : isStopped ? (\r\n            <div className=\"Buttons twoButtons\">\r\n               <button onClick={() => handleResume()} className=\"startButton\">\r\n                  {ResumeB}\r\n               </button>\r\n               <button onClick={() => handleReset()} className=\"resetButton\">\r\n                  {ResetB}\r\n               </button>\r\n            </div>\r\n         ) : (\r\n            <div className=\"Buttons twoButtons\">\r\n               <button onClick={() => handleStart()} className=\"startButton\">\r\n                  {StartB}\r\n               </button>\r\n               <button onClick={() => handleReset()} className=\"resetButton\">\r\n                  {ResetB}\r\n               </button>\r\n            </div>\r\n         )}\r\n         <LapsesList\r\n            lapses={lapses}\r\n            numberHeader={TableNumberHeader}\r\n            timeHeader={TableTimeHeader}\r\n            durationHeader={TableDurationHeader}\r\n         />\r\n      </div>\r\n   );\r\n}"]},"metadata":{},"sourceType":"module"}