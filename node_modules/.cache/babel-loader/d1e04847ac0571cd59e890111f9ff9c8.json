{"ast":null,"code":"import _slicedToArray from \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\\\u042D\\u043B\\u0438\\u044F\\\\React\\\\stopwatch\\\\src\\\\Components\\\\App.js\";\nimport React from \"react\";\nimport LapsesList from \"./LapsesList.js\";\nimport StopWatch from \"./StopWatch.js\";\nimport Timer from \"./Timer.js\";\nimport { useState, useEffect } from \"react\";\nimport { addMilliseconds, subMilliseconds, getTime, Interval, getMilliseconds, differenceInMilliseconds, differenceInSeconds, differenceInMinutes, format } from 'date-fns';\nexport default function App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lapses = _useState2[0],\n        setLapses = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        now = _useState4[0],\n        setNow = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        start = _useState6[0],\n        setStart = _useState6[1]; // const[interval,setInterval] = useState(differenceInMilliseconds(now,start));\n\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        myInterval = _useState8[0],\n        setMyInterval = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        duration = _useState10[0],\n        setDuration = _useState10[1]; //UPDATED PART\n\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        intervalMilliseconds = _useState12[0],\n        setintervalMilliseconds = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        intervalSeconds = _useState14[0],\n        setintervalSeconds = _useState14[1];\n\n  const _useState15 = useState(0),\n        _useState16 = _slicedToArray(_useState15, 2),\n        intervalMinutes = _useState16[0],\n        setintervalMinutes = _useState16[1];\n\n  const _useState17 = useState(differenceInMilliseconds(now, start)),\n        _useState18 = _slicedToArray(_useState17, 2),\n        interval = _useState18[0],\n        setInterval = _useState18[1]; //\n\n\n  const _useState19 = useState(\"START\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        StartB = _useState20[0],\n        setStartB = _useState20[1];\n\n  const _useState21 = useState(\"LAP\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        LapB = _useState22[0],\n        setLapB = _useState22[1];\n\n  const _useState23 = useState(\"RESET\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        ResetB = _useState24[0],\n        setResetB = _useState24[1];\n\n  const _useState25 = useState(\"STOP\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        StopB = _useState26[0],\n        setStopB = _useState26[1];\n\n  const _useState27 = useState(\"RESUME\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        ResumeB = _useState28[0],\n        setResumeB = _useState28[1];\n\n  const _useState29 = useState(\"eng\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        LANG = _useState30[0],\n        setLANG = _useState30[1];\n\n  const _useState31 = useState(\"Duration\"),\n        _useState32 = _slicedToArray(_useState31, 2),\n        TableDurationHeader = _useState32[0],\n        setDurationHeader = _useState32[1];\n\n  const _useState33 = useState(\"Number\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        TableNumberHeader = _useState34[0],\n        setNumberHeader = _useState34[1];\n\n  const _useState35 = useState(\"Time\"),\n        _useState36 = _slicedToArray(_useState35, 2),\n        TableTimeHeader = _useState36[0],\n        setTimeHeader = _useState36[1];\n\n  const _useState37 = useState(0),\n        _useState38 = _slicedToArray(_useState37, 2),\n        isStopped = _useState38[0],\n        setStop = _useState38[1];\n\n  useEffect(() => {\n    if (isStopped) {\n      clearInterval(myInterval);\n    } else if (start > 0) {\n      const id = setInterval(() => {\n        //   setNow(new Date().getTime());\n        //       // }, 73);\n        setNow(getTime(new Date())); // setInterval(differenceInMilliseconds(now,start));\n      }, 73);\n      setMyInterval(id);\n    }\n\n    return () => clearInterval(myInterval);\n  }, [isStopped]); // const timer = () => {\n  //   setInterval(() => {\n  //     setNow(new Date().getTime());\n  //   }, 73);\n  // };\n\n  const addLapse = () => {\n    const timestamp = getTime(new Date());\n    lapses.length > 0 ? setDuration(timestamp - start - lapses[0][\"end_time\"]) : setDuration(timestamp - start);\n    setLapses([{\n      end_time: timestamp - start,\n      duration: duration\n    }, ...lapses]);\n    setStop(false); // const timestamp = new Date().getTime();\n    // let duration;\n    // lapses.length > 0\n    //   ? (duration = timestamp - (lapses[0][\"end_time\"] + start))\n    //   : (duration = timestamp - start);\n    // setLapses([{ end_time: timestamp - start, duration: duration }, ...lapses]);\n    // setStop(false);\n  };\n\n  const handleStart = () => {\n    setStart(getTime(new Date()));\n    setNow(getTime(new Date()));\n    setStop(false); // setStart(new Date().getTime());\n    // setNow(new Date().getTime());\n    // setStop(false);\n  };\n\n  const handleResume = () => {\n    setStart(getTime(new Date()) - interval);\n    setNow(getTime(new Date())); // setStart(new Date().getTime() - interval);\n    // setNow(new Date().getTime());\n\n    setStop(false);\n  };\n\n  const handleReset = () => {\n    setNow(0);\n    setStart(0);\n    setStop(0);\n    setLapses([]);\n  };\n\n  const handleStop = () => {\n    setStop(true);\n  };\n\n  const ENG = () => {\n    if (LANG !== \"eng\") {\n      setStartB(\"START\");\n      setLapB(\"LAP\");\n      setResetB(\"RESET\");\n      setStopB(\"STOP\");\n      setResumeB(\"RESUME\");\n      setDurationHeader(\"Duration\");\n      setNumberHeader(\"Number\");\n      setTimeHeader(\"Time\");\n      setLANG(\"eng\");\n    }\n  };\n\n  const RU = () => {\n    if (LANG !== \"ru\") {\n      setStartB(\"СТАРТ\");\n      setLapB(\"КРУГ\");\n      setResetB(\"СБРОС\");\n      setStopB(\"СТОП\");\n      setResumeB(\"ПРОДОЛЖИТЬ\");\n      setDurationHeader(\"Длительность\");\n      setNumberHeader(\"Номер\");\n      setTimeHeader(\"Общее время\");\n      setLANG(\"ru\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lang_switcher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => RU(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"\\u0420\\u0423\\u0421\"), React.createElement(\"button\", {\n    onClick: () => ENG(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"ENG\")), React.createElement(\"div\", {\n    className: \"Timer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Timer, {\n    interval: interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"lapseTimer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, lapses.length > 0 ? React.createElement(Timer, {\n    interval: interval - lapses[0][\"end_time\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }) : React.createElement(Timer, {\n    interval: interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ClockContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(StopWatch, {\n    isStopped: isStopped,\n    interval: interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), start > 0 && !isStopped ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => addLapse(),\n    className: \"lapButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, LapB), React.createElement(\"button\", {\n    onClick: () => handleStop(),\n    className: \"stopButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, StopB)) : isStopped ? React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleResume(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, ResumeB), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, ResetB)) : React.createElement(\"div\", {\n    className: \"Buttons twoButtons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleStart(),\n    className: \"startButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, StartB), React.createElement(\"button\", {\n    onClick: () => handleReset(),\n    className: \"resetButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, ResetB)), React.createElement(LapsesList, {\n    lapses: lapses,\n    numberHeader: TableNumberHeader,\n    timeHeader: TableTimeHeader,\n    durationHeader: TableDurationHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Элия\\React\\stopwatch\\src\\Components\\App.js"],"names":["React","LapsesList","StopWatch","Timer","useState","useEffect","addMilliseconds","subMilliseconds","getTime","Interval","getMilliseconds","differenceInMilliseconds","differenceInSeconds","differenceInMinutes","format","App","lapses","setLapses","now","setNow","start","setStart","myInterval","setMyInterval","duration","setDuration","intervalMilliseconds","setintervalMilliseconds","intervalSeconds","setintervalSeconds","intervalMinutes","setintervalMinutes","interval","setInterval","StartB","setStartB","LapB","setLapB","ResetB","setResetB","StopB","setStopB","ResumeB","setResumeB","LANG","setLANG","TableDurationHeader","setDurationHeader","TableNumberHeader","setNumberHeader","TableTimeHeader","setTimeHeader","isStopped","setStop","clearInterval","id","Date","addLapse","timestamp","length","end_time","handleStart","handleResume","handleReset","handleStop","ENG","RU"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport LapsesList from \"./LapsesList.js\";\r\nimport StopWatch from \"./StopWatch.js\";\r\nimport Timer from \"./Timer.js\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { addMilliseconds,subMilliseconds, getTime, Interval, getMilliseconds,differenceInMilliseconds,\r\n  differenceInSeconds,differenceInMinutes, format } from 'date-fns';\r\n\r\nexport default function App() {\r\n  const [lapses, setLapses] = useState([]);\r\n  const [now, setNow] = useState(0);\r\n  const [start, setStart] = useState(0);\r\n  // const[interval,setInterval] = useState(differenceInMilliseconds(now,start));\r\n  const [myInterval, setMyInterval] = useState(null);\r\n  const [duration, setDuration] = useState(0);\r\n  //UPDATED PART\r\n  const [intervalMilliseconds, setintervalMilliseconds] = useState(0);\r\n  const [intervalSeconds, setintervalSeconds] = useState(0);\r\n  const [intervalMinutes, setintervalMinutes] = useState(0);\r\n  const[interval,setInterval] = useState(differenceInMilliseconds(now,start));\r\n//\r\n  const [StartB, setStartB] = useState(\"START\");\r\n  const [LapB, setLapB] = useState(\"LAP\");\r\n  const [ResetB, setResetB] = useState(\"RESET\");\r\n  const [StopB, setStopB] = useState(\"STOP\");\r\n  const [ResumeB, setResumeB] = useState(\"RESUME\");\r\n  const [LANG, setLANG] = useState(\"eng\");\r\n\r\n  const[TableDurationHeader, setDurationHeader] = useState(\"Duration\");\r\n  const[TableNumberHeader, setNumberHeader] = useState(\"Number\");\r\n  const[TableTimeHeader, setTimeHeader] = useState(\"Time\");\r\n\r\n  const [isStopped, setStop] = useState(0);\r\n  useEffect(() => {\r\n    if (isStopped) {\r\n      clearInterval(myInterval);\r\n    } else if (start > 0) {\r\n      const id = setInterval(() => {\r\n      //   setNow(new Date().getTime());\r\n        //       // }, 73);\r\n        setNow(getTime(new Date()));\r\n        // setInterval(differenceInMilliseconds(now,start));\r\n      }, 73);\r\n      setMyInterval(id);\r\n    }\r\n    return () => clearInterval(myInterval);\r\n  }, [isStopped]);\r\n\r\n  // const timer = () => {\r\n  //   setInterval(() => {\r\n  //     setNow(new Date().getTime());\r\n  //   }, 73);\r\n  // };\r\n\r\n  const addLapse = () => {\r\n    const timestamp = getTime(new Date());\r\n    lapses.length > 0\r\n    ? (setDuration(timestamp - start - (lapses[0][\"end_time\"])))\r\n    : (setDuration(timestamp - start));\r\n    setLapses([{ end_time: timestamp - start , duration: duration }, ...lapses]);\r\n    setStop(false);\r\n\r\n    // const timestamp = new Date().getTime();\r\n    // let duration;\r\n    // lapses.length > 0\r\n    //   ? (duration = timestamp - (lapses[0][\"end_time\"] + start))\r\n    //   : (duration = timestamp - start);\r\n    // setLapses([{ end_time: timestamp - start, duration: duration }, ...lapses]);\r\n    // setStop(false);\r\n  };\r\n\r\n  const handleStart = () => {\r\n    setStart(getTime(new Date()));\r\n    setNow(getTime(new Date()));\r\n    setStop(false);\r\n    // setStart(new Date().getTime());\r\n    // setNow(new Date().getTime());\r\n    // setStop(false);\r\n  };\r\n\r\n  const handleResume = () => {\r\n    setStart(getTime(new Date()) - interval);\r\n    setNow(getTime(new Date()));\r\n    // setStart(new Date().getTime() - interval);\r\n    // setNow(new Date().getTime());\r\n    setStop(false);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setNow(0);\r\n    setStart(0);\r\n    setStop(0);\r\n    setLapses([]);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setStop(true);\r\n  };\r\n\r\n  const ENG = () => {\r\n    if (LANG !== \"eng\") {\r\n      setStartB(\"START\");\r\n      setLapB(\"LAP\");\r\n      setResetB(\"RESET\");\r\n      setStopB(\"STOP\");\r\n      setResumeB(\"RESUME\");\r\n      setDurationHeader(\"Duration\");\r\n      setNumberHeader(\"Number\");\r\n      setTimeHeader(\"Time\");\r\n      setLANG(\"eng\");\r\n    }\r\n  };\r\n  const RU = () => {\r\n    if (LANG !== \"ru\") {\r\n      setStartB(\"СТАРТ\");\r\n      setLapB(\"КРУГ\");\r\n      setResetB(\"СБРОС\");\r\n      setStopB(\"СТОП\");\r\n      setResumeB(\"ПРОДОЛЖИТЬ\");\r\n      setDurationHeader(\"Длительность\");\r\n      setNumberHeader(\"Номер\");\r\n      setTimeHeader(\"Общее время\");\r\n      setLANG(\"ru\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"lang_switcher\">\r\n        <button onClick={() => RU()}>РУС</button>\r\n        <button onClick={() => ENG()}>ENG</button>\r\n      </div>\r\n      <div className=\"Timer\">\r\n        <Timer interval={interval} />\r\n      </div>\r\n      <div className=\"lapseTimer\">\r\n        {lapses.length > 0 ? (\r\n          <Timer interval={interval - lapses[0][\"end_time\"]} />\r\n        ) : (\r\n          <Timer interval={interval} />\r\n        )}\r\n      </div>\r\n      <div className=\"ClockContainer\">\r\n        <StopWatch isStopped={isStopped} interval={interval} />\r\n      </div>\r\n      {start > 0 && !isStopped ? (\r\n        <div className=\"Buttons twoButtons\">\r\n          <button onClick={() => addLapse()} className=\"lapButton\">\r\n            {LapB}\r\n          </button>\r\n          <button onClick={() => handleStop()} className=\"stopButton\">\r\n            {StopB}\r\n          </button>\r\n        </div>\r\n      ) : isStopped ? (\r\n        <div className=\"Buttons twoButtons\">\r\n          <button onClick={() => handleResume()} className=\"startButton\">\r\n            {ResumeB}\r\n          </button>\r\n          <button onClick={() => handleReset()} className=\"resetButton\">\r\n            {ResetB}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"Buttons twoButtons\">\r\n          <button onClick={() => handleStart()} className=\"startButton\">\r\n            {StartB}\r\n          </button>\r\n          <button onClick={() => handleReset()} className=\"resetButton\">\r\n            {ResetB}\r\n          </button>\r\n        </div>\r\n      )}\r\n      <LapsesList lapses={lapses} numberHeader={TableNumberHeader} timeHeader={TableTimeHeader} durationHeader={TableDurationHeader}/>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}